name: Frontend CI

on:
  push:
    branches:
      - main
      - docker-main 
  pull_request:
    branches:
      - main
      - docker-main

jobs:
  frontend-setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache Node.js modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Lint frontend code
      run: |
        cd frontend
        npx eslint src --ext .js,.jsx,.ts,.tsx,.json || true

    - name: Format frontend code with Prettier
      run: |
        cd frontend
        npx prettier --check "**/*.{js,jsx,ts,tsx,json,css,scss,md}" || true

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Run ESLint Security Checks
      run: |
        cd frontend
        npm audit --omit=dev --audit-level=critical || true
